require 'spec_helper'

describe TLV::Node do

  let (:encoded) { "708201c1500c56495341204352454449544f57104147700000001033d1802206193076575a08414770000000103382025c008407a00000000310108c159f02069f03069f1a0295055f2a029a039c019f37048d178a029f02069f03069f1a0295055f2a029a039c019f37048e14000000000000000002010204020301031e031f02950580800008009a031412199b0268009c01005f201a4741524349412f4a554c494f2048554d424552544f20202020205f24031802285f25031402045f2a0206005f300202065f3401009f01060000000000019f02060000000000254f07a00000000310109f0702ff009f0902008c9f0d05d8688ca8009f0e0524102000409f0f05d868dcf8009f100706010a03a0b8009f120c56495341204352454449544f9f160f3132333435363738393031323334359f1a0208409f1c0831313232333334349f1e0831323334353637389f1f183139333037202020202020202030303635373030593030309f21031155189f2608910091534d34df949f2701809f33036028009f34031e03009f3501219f360200289f37042c7d43dc9f3901059f4005620000a0019f4104000000019f4e152020202020202d2054657374204d65726368616e74000000" }

  subject(:node) { TLV.parse_hex(encoded)['70'] }

  describe '#[]' do

    it 'returns a TLV::Node element' do
      expect(node['50']).to be_kind_of(TLV::Node)
    end

    it 'returns an element with the requested tag' do
      expect(node['50'].tag).to eq('50')
    end

  end

  describe '#extract' do

    let(:tags_to_extract) { %w[50 95] }

    it 'returns a TLV::Root element' do
      expect(node.extract(tags_to_extract)).to be_kind_of(TLV::Root)
    end

    it 'returns the requested amount of tags' do
      expect(node.extract(tags_to_extract).children.size).to eq(2)
    end

  end

  describe '#generate' do

    it 'generates the expected result' do
      expect(node.generate).to  eq(encoded)
    end

  end

end